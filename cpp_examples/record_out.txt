reutera@lxhalle:~/Documents/clang_vtable_dump$ clang -cc1 -x c++ -v -fdump-record-layouts -emit-llvm multinh0.cpp
clang -cc1 version 14.0.0 based upon LLVM 14.0.0 default target x86_64-pc-linux-gnu
#include "..." search starts here:
End of search list.

*** Dumping AST Record Layout
         0 | class A
         0 |   (A vtable pointer)
         8 |   int a
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class B
         0 |   (B vtable pointer)
         8 |   int b
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class C
         0 |   class A (primary base)
         0 |     (A vtable pointer)
         8 |     int a
        16 |   class B (base)
        16 |     (B vtable pointer)
        24 |     int b
        28 |   int c
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x160b010 <multinh0.cpp:1:1, line:3:1> line:1:7 referenced class A definition
|-DefinitionData polymorphic
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple non_trivial
| |-CopyAssignment simple non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple non_trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x160b128 <col:1, col:7> col:7 implicit class A
|-AccessSpecDecl 0x160b1b8 <col:11, col:17> col:11 public
|-FieldDecl 0x160b1f8 <line:2:1, col:5> col:5 a 'int'
|-CXXMethodDecl 0x160b360 <col:8, col:25> col:20 f 'int (int)' virtual
| `-ParmVarDecl 0x160b260 <col:22> col:25 'int'
|-CXXMethodDecl 0x160b468 <line:1:7> col:7 implicit operator= 'A &(const A &)' inline default noexcept-unevaluated 0x160b468
| `-ParmVarDecl 0x160b578 <col:7> col:7 'const A &'
|-CXXMethodDecl 0x160b618 <col:7> col:7 implicit operator= 'A &(A &&)' inline default noexcept-unevaluated 0x160b618
| `-ParmVarDecl 0x160b728 <col:7> col:7 'A &&'
|-CXXDestructorDecl 0x160b7c0 <col:7> col:7 implicit ~A 'void ()' inline default trivial noexcept-unevaluated 0x160b7c0
|-CXXConstructorDecl 0x163a928 <col:7> col:7 implicit used A 'void () noexcept' inline default
| `-CompoundStmt 0x163b6d8 <col:7>
|-CXXConstructorDecl 0x163aaf0 <col:7> col:7 implicit constexpr A 'void (const A &)' inline default noexcept-unevaluated 0x163aaf0
| `-ParmVarDecl 0x163ac08 <col:7> col:7 'const A &'
`-CXXConstructorDecl 0x163ac88 <col:7> col:7 implicit constexpr A 'void (A &&)' inline default noexcept-unevaluated 0x163ac88
  `-ParmVarDecl 0x163ad98 <col:7> col:7 'A &&'

Layout: <CGRecordLayout
  LLVMType:%class.A = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.A.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x160b8d0 <multinh0.cpp:4:1, line:7:1> line:4:7 referenced class B definition
|-DefinitionData polymorphic
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple non_trivial
| |-CopyAssignment simple non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple non_trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x160b9e8 <col:1, col:7> col:7 implicit class B
|-AccessSpecDecl 0x160ba78 <col:11, col:17> col:11 public
|-FieldDecl 0x160bab8 <line:5:1, col:5> col:5 b 'int'
|-CXXMethodDecl 0x160bbe8 <col:8, col:25> col:20 used f 'int (int)' virtual
| `-ParmVarDecl 0x160bb20 <col:22> col:25 'int'
|-CXXMethodDecl 0x160bd40 <line:6:1, col:18> col:13 g 'int (int)' virtual
| `-ParmVarDecl 0x160bca8 <col:15> col:18 'int'
|-CXXMethodDecl 0x160be48 <line:4:7> col:7 implicit operator= 'B &(const B &)' inline default noexcept-unevaluated 0x160be48
| `-ParmVarDecl 0x1637c00 <col:7> col:7 'const B &'
|-CXXMethodDecl 0x1637c98 <col:7> col:7 implicit operator= 'B &(B &&)' inline default noexcept-unevaluated 0x1637c98
| `-ParmVarDecl 0x1637da8 <col:7> col:7 'B &&'
|-CXXDestructorDecl 0x1637e40 <col:7> col:7 implicit ~B 'void ()' inline default trivial noexcept-unevaluated 0x1637e40
|-CXXConstructorDecl 0x163aa18 <col:7> col:7 implicit used B 'void () noexcept' inline default
| `-CompoundStmt 0x163b740 <col:7>
|-CXXConstructorDecl 0x163ae18 <col:7> col:7 implicit constexpr B 'void (const B &)' inline default noexcept-unevaluated 0x163ae18
| `-ParmVarDecl 0x163af28 <col:7> col:7 'const B &'
`-CXXConstructorDecl 0x163afa8 <col:7> col:7 implicit constexpr B 'void (B &&)' inline default noexcept-unevaluated 0x163afa8
  `-ParmVarDecl 0x163b0b8 <col:7> col:7 'B &&'

Layout: <CGRecordLayout
  LLVMType:%class.B = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.B.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x1637f20 <multinh0.cpp:8:1, line:10:1> line:8:7 referenced class C definition
|-DefinitionData polymorphic
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple non_trivial
| |-CopyAssignment simple non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple non_trivial
| `-Destructor simple irrelevant trivial
|-public 'A'
|-public 'B'
|-CXXRecordDecl 0x16380b8 <col:1, col:7> col:7 implicit class C
|-AccessSpecDecl 0x1638148 <col:33, col:39> col:33 public
|-FieldDecl 0x1638188 <line:9:1, col:5> col:5 c 'int'
|-CXXMethodDecl 0x16382b8 <col:8, col:25> col:20 f 'int (int)' virtual
| |-Overrides: [ 0x160b360 A::f 'int (int)', 0x160bbe8 B::f 'int (int)' ]
| `-ParmVarDecl 0x16381f0 <col:22> col:25 'int'
|-CXXMethodDecl 0x16383b8 <line:8:7> col:7 implicit operator= 'C &(const C &)' inline default noexcept-unevaluated 0x16383b8
| `-ParmVarDecl 0x16384c8 <col:7> col:7 'const C &'
|-CXXMethodDecl 0x1638568 <col:7> col:7 implicit operator= 'C &(C &&)' inline default noexcept-unevaluated 0x1638568
| `-ParmVarDecl 0x1638678 <col:7> col:7 'C &&'
|-CXXDestructorDecl 0x1638710 <col:7> col:7 implicit ~C 'void ()' inline default trivial noexcept-unevaluated 0x1638710
|-CXXConstructorDecl 0x1638b18 <col:7> col:7 implicit used C 'void () noexcept' inline default
| |-CXXCtorInitializer 'A'
| | `-CXXConstructExpr 0x163b6e8 <col:7> 'A' 'void () noexcept'
| |-CXXCtorInitializer 'B'
| | `-CXXConstructExpr 0x163b750 <col:7> 'B' 'void () noexcept'
| `-CompoundStmt 0x163b7b8 <col:7>
|-CXXConstructorDecl 0x163b138 <col:7> col:7 implicit constexpr C 'void (const C &)' inline default noexcept-unevaluated 0x163b138
| `-ParmVarDecl 0x163b248 <col:7> col:7 'const C &'
`-CXXConstructorDecl 0x163b2c8 <col:7> col:7 implicit constexpr C 'void (C &&)' inline default noexcept-unevaluated 0x163b2c8
  `-ParmVarDecl 0x163b3d8 <col:7> col:7 'C &&'

Layout: <CGRecordLayout
  LLVMType:%class.C = type { %class.A.base, [4 x i8], %class.B.base, i32 }
  NonVirtualBaseLLVMType:%class.C = type { %class.A.base, [4 x i8], %class.B.base, i32 }
  IsZeroInitializable:1
  BitFields:[
]>